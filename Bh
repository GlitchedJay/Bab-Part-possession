--blackholeMaker


--------------------------------------------------------------------------------
-- LocalScript: Combined Blackhole/Whitehole System v3
-- Place this under StarterPlayerScripts
--------------------------------------------------------------------------------

--// Services
local Players          = game:GetService("Players")
local RunService       = game:GetService("RunService")
local ReplicatedStorage= game:GetService("ReplicatedStorage")
local Workspace        = game:GetService("Workspace")

--// Player & Character
local LPlayer   = Players.LocalPlayer
local Character = LPlayer.Character or LPlayer.CharacterAdded:Wait()
LPlayer.CharacterAdded:Connect(function(ch) Character = ch end)

--// Remotes & Plate/ActiveParts
local Remotes    = ReplicatedStorage:WaitForChild("Remotes")
local StampAsset = Remotes:WaitForChild("StampAsset")

local Plates = Workspace:WaitForChild("Plates")
local PlayerPlate, ActiveParts
for _, pf in ipairs(Plates:GetChildren()) do
    if pf:FindFirstChild("Owner") and pf.Owner.Value == LPlayer then
        PlayerPlate = pf:FindFirstChild("Plate")
        ActiveParts  = pf:FindFirstChild("ActiveParts")
        break
    end
end
if not (PlayerPlate and ActiveParts) then
    warn("PlayerPlate or ActiveParts not found!")
    return
end

--// Grow‐function storage & stamp offset
local growFunctions   = {}    -- [Model] = function(amount)
local BH_STAMP_HEIGHT = 5

--// Folders & tracking
local blackholesFolder = Workspace:FindFirstChild("Blackholes")
if not blackholesFolder then
    blackholesFolder = Instance.new("Folder", Workspace)
    blackholesFolder.Name = "Blackholes"
end

local whiteholesFolder = Workspace:FindFirstChild("Whiteholes")
if not whiteholesFolder then
    whiteholesFolder = Instance.new("Folder", Workspace)
    whiteholesFolder.Name = "Whiteholes"
end

local allBlackBlockModels = {}   -- all blocks spawned by any blackhole
local allWhiteBlockModels = {}   -- all blocks spawned by any whitehole
local whitelist            = {}   -- [UserId] = {Name=..., DisplayName=...}

--------------------------------------------------------------------------------
--// Helper Functions
--------------------------------------------------------------------------------

-- Detect newly stamped assets
local function getNewChildren(oldList)
    local out = {}
    for _, c in ipairs(ActiveParts:GetChildren()) do
        if not table.find(oldList, c) then
            table.insert(out, c)
        end
    end
    return out
end

-- Exclude local player parts/tools
local function isLocalPlayerPart(part)
    if part:IsDescendantOf(Character) then return true end
    local p = part.Parent
    while p do
        if p:IsA("Tool") or p == LPlayer.Backpack then return true end
        p = p.Parent
    end
    return false
end

-- Exclude blocks belonging to any blackhole
local function isBlackHoleBlock(part)
    for _, m in ipairs(allBlackBlockModels) do
        if part:IsDescendantOf(m) then return true end
    end
    for _, bh in ipairs(blackholesFolder:GetChildren()) do
        if part:IsDescendantOf(bh) then return true end
    end
    return false
end

-- Exclude blocks belonging to any whitehole
local function isWhiteHoleBlock(part)
    for _, m in ipairs(allWhiteBlockModels) do
        if part:IsDescendantOf(m) then return true end
    end
    for _, wh in ipairs(whiteholesFolder:GetChildren()) do
        if part:IsDescendantOf(wh) then return true end
    end
    return false
end

--------------------------------------------------------------------------------
--// UI Creation
--------------------------------------------------------------------------------

local gui = Instance.new("ScreenGui", LPlayer:WaitForChild("PlayerGui"))
gui.Name, gui.ResetOnSpawn = "BH_UI", false

-- Main window
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size, mainFrame.Position = UDim2.new(0,650,0,400), UDim2.new(0.5,-325,0.5,-200)
mainFrame.BackgroundColor3, mainFrame.Active, mainFrame.Draggable = Color3.fromRGB(25,25,25), true, true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)
do
    local grad = Instance.new("UIGradient", mainFrame)
    grad.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(40,40,40)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(25,25,25))
    }
end

-- Header & Title
local header = Instance.new("Frame", mainFrame)
header.Size, header.BackgroundTransparency = UDim2.new(1,0,0,50), 1
local title = Instance.new("TextLabel", header)
title.Size, title.BackgroundTransparency = UDim2.new(1,0,1,0), 1
title.Text, title.Font, title.TextScaled, title.TextColor3 =
    "Blackhole Dashboard", Enum.Font.GothamBold, true, Color3.new(1,1,1)

-- Close button
local closeBtn = Instance.new("TextButton", header)
closeBtn.Text, closeBtn.Size, closeBtn.Position =
    "✕", UDim2.new(0,40,0,40), UDim2.new(1,-45,0,5)
closeBtn.BackgroundColor3, closeBtn.TextColor3, closeBtn.Font, closeBtn.TextSize =
    Color3.fromRGB(200,50,50), Color3.new(1,1,1), Enum.Font.GothamBold, 24
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,8)

-- Sidebar
local sidebar = Instance.new("Frame", mainFrame)
sidebar.Size, sidebar.Position = UDim2.new(0,100,1,-50), UDim2.new(0,0,0,50)
sidebar.BackgroundColor3 = Color3.fromRGB(35,35,35)
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0,10)

local function mkSideBtn(parent,name,text,y,color)
    local b = Instance.new("TextButton", parent)
    b.Name, b.Text = name, text
    b.Size, b.Position = UDim2.new(1,-10,0,40), UDim2.new(0,5,0,y)
    b.BackgroundColor3, b.TextColor3 = color, Color3.new(1,1,1)
    b.Font, b.TextScaled = Enum.Font.GothamBold, true
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    return b
end

local homeBtn     = mkSideBtn(sidebar,"HomeBtn","Home",10,Color3.fromRGB(70,130,180))
local advancedBtn = mkSideBtn(sidebar,"AdvBtn","Advanced",60,Color3.fromRGB(100,100,140))

-- Content area
local content = Instance.new("Frame", mainFrame)
content.Size, content.Position = UDim2.new(1,-100,1,-50), UDim2.new(0,100,0,50)
content.BackgroundTransparency = 1

local homePage = Instance.new("ScrollingFrame", content)
homePage.Name, homePage.Size, homePage.CanvasSize =
    "HomePage", UDim2.new(1,0,1,0), UDim2.new(0,0,2,0)
homePage.BackgroundTransparency, homePage.ScrollBarThickness = 1, 6

local advPage = Instance.new("ScrollingFrame", content)
advPage.Name, advPage.Size, advPage.CanvasSize, advPage.Visible =
    "AdvPage", UDim2.new(1,0,1,0), UDim2.new(0,0,2,0), false
advPage.BackgroundTransparency, advPage.ScrollBarThickness = 1, 6

-- Open–UI button
local openBtn = Instance.new("TextButton", gui)
openBtn.Name, openBtn.Text = "OpenBtn","☰"
openBtn.Size, openBtn.Position = UDim2.new(0,50,0,50), UDim2.new(0,20,1,-70)
openBtn.BackgroundColor3, openBtn.TextColor3 = Color3.fromRGB(70,130,180), Color3.new(1,1,1)
openBtn.Font, openBtn.TextSize, openBtn.Visible = Enum.Font.GothamBold,30,false
Instance.new("UICorner", openBtn).CornerRadius = UDim.new(0,12)

--------------------------------------------------------------------------------
--// Home‑Page Controls
--------------------------------------------------------------------------------

local hy = 20
local function makeHomeBtn(name,text,color)
    local b = Instance.new("TextButton", homePage)
    b.Name, b.Text = name, text
    b.Size, b.Position = UDim2.new(0,220,0,40), UDim2.new(0,20,0,hy)
    hy = hy + 50
    b.BackgroundColor3, b.TextColor3 = color, Color3.new(1,1,1)
    b.Font, b.TextSize = Enum.Font.GothamSemibold, 18
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    return b
end

local createOldBtn       = makeHomeBtn("CreateOldBtn","Create Blackhole (Old)", Color3.fromRGB(70,130,180))
local removeOldBtn       = makeHomeBtn("RemoveOldBtn","Remove Blackhole",       Color3.fromRGB(180,70,70))
local toggleOldBtn       = makeHomeBtn("ToggleOldBtn","Toggle Active",          Color3.fromRGB(100,100,100))
local bringOldLocalBtn   = makeHomeBtn("BringOldLocalBtn","Bring BH To Local",Color3.fromRGB(70,180,70))

-- Target transport (fixed widths)
local targetBox = Instance.new("TextBox", homePage)
targetBox.Name, targetBox.PlaceholderText = "TargetBox", "Target Name"
targetBox.Size, targetBox.Position = UDim2.new(0,140,0,hy), UDim2.new(0,20,0,hy)
targetBox.BackgroundColor3, targetBox.TextColor3 = Color3.fromRGB(50,50,50), Color3.new(1,1,1)
targetBox.Font, targetBox.TextScaled = Enum.Font.Gotham, true
Instance.new("UICorner", targetBox).CornerRadius = UDim.new(0,8)
hy = hy + 40

local bringOldTargetBtn = Instance.new("TextButton", homePage)
bringOldTargetBtn.Name, bringOldTargetBtn.Text = "BringOldTargetBtn", "Bring To Target"
bringOldTargetBtn.Size, bringOldTargetBtn.Position = UDim2.new(0,80,0,hy), UDim2.new(0,20,0,hy)
bringOldTargetBtn.BackgroundColor3, bringOldTargetBtn.TextColor3 = Color3.fromRGB(70,180,70), Color3.new(1,1,1)
bringOldTargetBtn.Font, bringOldTargetBtn.TextSize = Enum.Font.GothamSemibold, 18
Instance.new("UICorner", bringOldTargetBtn).CornerRadius = UDim.new(0,8)
hy = hy + 60

-- Whitelist UI
local wlLabel = Instance.new("TextLabel", homePage)
wlLabel.Text, wlLabel.Font, wlLabel.TextScaled, wlLabel.TextColor3, wlLabel.BackgroundTransparency =
    "Whitelist", Enum.Font.GothamBold, true, Color3.new(1,1,1), 1
wlLabel.Size, wlLabel.Position = UDim2.new(0,220,0,hy), UDim2.new(0,20,0,hy)
hy = hy + 30

local wlBox = Instance.new("TextBox", homePage)
wlBox.Name, wlBox.PlaceholderText = "WLBox", "Player Name"
wlBox.Size, wlBox.Position = UDim2.new(0,140,0,hy), UDim2.new(0,20,0,hy)
wlBox.BackgroundColor3, wlBox.TextColor3 = Color3.fromRGB(50,50,50), Color3.new(1,1,1)
wlBox.Font, wlBox.TextScaled = Enum.Font.Gotham, true
Instance.new("UICorner", wlBox).CornerRadius = UDim.new(0,8)
hy = hy + 40

local wlAddBtn = Instance.new("TextButton", homePage)
wlAddBtn.Name, wlAddBtn.Text = "WLAddBtn", "Add"
wlAddBtn.Size, wlAddBtn.Position = UDim2.new(0,60,0,hy), UDim2.new(0,20,0,hy)
wlAddBtn.BackgroundColor3, wlAddBtn.TextColor3 = Color3.fromRGB(70,130,180), Color3.new(1,1,1)
wlAddBtn.Font, wlAddBtn.TextSize = Enum.Font.GothamSemibold, 18
Instance.new("UICorner", wlAddBtn).CornerRadius = UDim.new(0,8)

local wlRemBtn = Instance.new("TextButton", homePage)
wlRemBtn.Name, wlRemBtn.Text = "WLRemBtn", "Rem"
wlRemBtn.Size, wlRemBtn.Position = UDim2.new(0,60,0,hy), UDim2.new(0,90,0,hy)
wlRemBtn.BackgroundColor3, wlRemBtn.TextColor3 = Color3.fromRGB(180,70,70), Color3.new(1,1,1)
wlRemBtn.Font, wlRemBtn.TextSize = Enum.Font.GothamSemibold, 18
Instance.new("UICorner", wlRemBtn).CornerRadius = UDim.new(0,8)
hy = hy + 60

local wlList = Instance.new("ScrollingFrame", homePage)
wlList.Name, wlList.Size, wlList.Position = "WLList", UDim2.new(0,220,0,hy), UDim2.new(0,20,0,hy)
wlList.BackgroundTransparency, wlList.ScrollBarThickness = 1, 4

--------------------------------------------------------------------------------
--// Advanced‑Page Controls
--------------------------------------------------------------------------------

local ay = 20
local function makeAdvBtn(name,text,color)
    local b = Instance.new("TextButton", advPage)
    b.Name, b.Text = name, text
    b.Size, b.Position = UDim2.new(0,220,0,40), UDim2.new(0,20,0,ay)
    ay = ay + 50
    b.BackgroundColor3, b.TextColor3 = color, Color3.new(1,1,1)
    b.Font, b.TextSize = Enum.Font.GothamSemibold, 18
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    return b
end

local createGrowBtn        = makeAdvBtn("CreateGrowBtn",       "Create Blackhole (Grow)", Color3.fromRGB(140,70,180))
local createWhiteholeBtn   = makeAdvBtn("CreateWhiteholeBtn",  "Create Whitehole",        Color3.fromRGB(100,140,200))
local removeWhiteholeBtn   = makeAdvBtn("RemoveWhiteholeBtn",  "Remove Whitehole",        Color3.fromRGB(180,70,70))
local toggleWhiteholeBtn   = makeAdvBtn("ToggleWhiteholeBtn",  "Toggle Whitehole",        Color3.fromRGB(100,100,100))
local bringWhiteLocalBtn   = makeAdvBtn("BringWhiteLocalBtn",  "Bring White Local",       Color3.fromRGB(70,180,70))
local bringWhiteTargetBtn  = makeAdvBtn("BringWhiteTargetBtn", "Bring White Target",      Color3.fromRGB(70,180,70))

--------------------------------------------------------------------------------
--// UI Update Functions
--------------------------------------------------------------------------------

local selectedBlackhole, selectedWhitehole

local function updateBlackholeList()
    bhListSF:ClearAllChildren()
    local y=0
    for _, bh in ipairs(blackholesFolder:GetChildren()) do
        local b = Instance.new("TextButton", bhListSF)
        b.Size, b.Position, b.Text =
            UDim2.new(1,-10,0,30), UDim2.new(0,5,0,y), bh.Name
        b.BackgroundColor3, b.TextColor3, b.Font, b.TextSize =
            Color3.fromRGB(80,80,80), Color3.new(1,1,1), Enum.Font.GothamSemibold, 16
        Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
        b.MouseButton1Click:Connect(function()
            for _, c in ipairs(bhListSF:GetChildren()) do
                if c:IsA("TextButton") then c.BackgroundColor3 = Color3.fromRGB(80,80,80) end
            end
            b.BackgroundColor3 = Color3.fromRGB(120,120,120)
            selectedBlackhole = bh
        end)
        y = y + 35
    end
    bhListSF.CanvasSize = UDim2.new(0,0,0,y)
end

local function updateWhiteholeList()
    whListSF:ClearAllChildren()
    local y=0
    for _, wh in ipairs(whiteholesFolder:GetChildren()) do
        local b = Instance.new("TextButton", whListSF)
        b.Size, b.Position, b.Text =
            UDim2.new(1,-10,0,30), UDim2.new(0,5,0,y), wh.Name
        b.BackgroundColor3, b.TextColor3, b.Font, b.TextSize =
            Color3.fromRGB(80,80,80), Color3.new(1,1,1), Enum.Font.GothamSemibold, 16
        Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
        b.MouseButton1Click:Connect(function()
            for _, c in ipairs(whListSF:GetChildren()) do
                if c:IsA("TextButton") then c.BackgroundColor3 = Color3.fromRGB(80,80,80) end
            end
            b.BackgroundColor3 = Color3.fromRGB(120,120,120)
            selectedWhitehole = wh
        end)
        y = y + 35
    end
    whListSF.CanvasSize = UDim2.new(0,0,0,y)
end

local function updateWhitelistDisplay()
    wlList:ClearAllChildren()
    local y=0
    for uid, info in pairs(whitelist) do
        local lbl = Instance.new("TextLabel", wlList)
        lbl.Size, lbl.Position, lbl.Text =
            UDim2.new(1,0,0,20), UDim2.new(0,0,0,y), info.DisplayName or info.Name
        lbl.BackgroundTransparency, lbl.TextColor3, lbl.Font, lbl.TextScaled =
            1, Color3.new(1,1,1), Enum.Font.Gotham, true
        y = y + 22
    end
    wlList.CanvasSize = UDim2.new(0,0,0,y)
end

--------------------------------------------------------------------------------
--// Creation & Loading Flag
--------------------------------------------------------------------------------

-- 1) Old Blackhole
local BLACK_BLOCK_ID, BLACK_BLOCK_UUID = 56453053, "{85c11466-9119-4714-957b-74aa3d8232c1}"
local NUM_OLD, R_OLD = 50, 8

function createOldBlackholeModel()
    local idx=1
    while blackholesFolder:FindFirstChild("Blackhole"..idx) do idx=idx+1 end
    local bh=Instance.new("Model",blackholesFolder); bh.Name="Blackhole"..idx
    local core=Instance.new("Part",bh)
    core.Name,core.Size,core.Shape,core.Material,core.Color=
      "BlackHoleCore",Vector3.new(6,6,6),Enum.PartType.Ball,Enum.Material.Neon,Color3.new(0,0,0)
    core.Anchored,core.CanCollide=true,false
    core:SetAttribute("Active",true)
    core:SetAttribute("GrowEnabled",false)
    core:SetAttribute("PullRadius",30)
    core:SetAttribute("Loaded",false)
    local rp=Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso")
    core.CFrame=(rp and rp.CFrame) or PlayerPlate.CFrame

    local golden=math.pi*(3-math.sqrt(5))
    for i=1,NUM_OLD do
        local t=(i-0.5)/NUM_OLD; local y=1-2*t; local r=math.sqrt(1-y*y)
        local phi=(i-1)*golden
        local offset=Vector3.new(math.cos(phi)*r,y,math.sin(phi)*r)*R_OLD
        local spawnC=PlayerPlate.CFrame+Vector3.new(0,BH_STAMP_HEIGHT,0)
        local oldList=getNewChildren(ActiveParts:GetChildren())  -- capture before
        StampAsset:InvokeServer(BLACK_BLOCK_ID,spawnC,BLACK_BLOCK_UUID,{},0)
        task.wait(0.05)
        for _,mdl in ipairs(getNewChildren(oldList)) do
            if mdl.Name=="Block - Black" then
                mdl.Name="Block - Black_Old_"..i
                table.insert(allBlackBlockModels,mdl)
                local p=mdl:FindFirstChildWhichIsA("BasePart")
                if p then
                    p.Anchored,p.CanCollide=false,false
                    p.CustomPhysicalProperties=PhysicalProperties.new(0.01,0,0,0,0)
                    local bp=Instance.new("BodyPosition",p)
                    bp.MaxForce,bp.P,bp.D=Vector3.new(1e6,1e6,1e6),10000,300
                    local bg=Instance.new("BodyGyro",p)
                    bg.MaxTorque,bg.D=Vector3.new(1e5,1e5,1e5),300
                    RunService.Heartbeat:Connect(function()
                        if core.Parent and p.Parent then
                            bp.Position=core.Position+offset
                            bg.CFrame=CFrame.lookAt(p.Position,core.Position)
                        end
                    end)
                end
                break
            end
        end
    end

    core:SetAttribute("Loaded",true)
    updateBlackholeList()
    return bh
end

-- 2) Growing Blackhole
function createGrowingBlackholeModel()
    local idx=1
    while blackholesFolder:FindFirstChild("BlackholeGrow"..idx) do idx=idx+1 end
    local bh=Instance.new("Model",blackholesFolder); bh.Name="BlackholeGrow"..idx
    local core=Instance.new("Part",bh)
    core.Name,core.Size,core.Shape,core.Material,core.Color=
      "BlackHoleCore",Vector3.new(6,6,6),Enum.PartType.Ball,Enum.Material.Neon,Color3.new(0,0,0)
    core.Anchored,core.CanCollide=true,false
    core:SetAttribute("Active",true)
    core:SetAttribute("GrowEnabled",true)
    core:SetAttribute("BlockCount",50)
    core:SetAttribute("PullRadius",30)
    core:SetAttribute("Loaded",false)
    local rp=Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso")
    core.CFrame=(rp and rp.CFrame) or PlayerPlate.CFrame

    local blocksFolder=Instance.new("Folder",bh); blocksFolder.Name="Blocks"

    local function stampBlocks(count)
        local golden=math.pi*(3-math.sqrt(5))
        local radius=8+(count-50)*0.1
        local oldList=ActiveParts:GetChildren()
        for i=1,count do
            local t=(i-0.5)/count; local y=1-2*t; local r=math.sqrt(1-y*y)
            local phi=(i-1)*golden
            local offset=Vector3.new(math.cos(phi)*r,y,math.sin(phi)*r)*radius
            StampAsset:InvokeServer(BLACK_BLOCK_ID,PlayerPlate.CFrame+Vector3.new(0,BH_STAMP_HEIGHT,0),BLACK_BLOCK_UUID,{},0)
            task.wait(0.02)
            for _,mdl in ipairs(getNewChildren(oldList)) do
                if mdl.Name=="Block - Black" then
                    mdl.Name="BlockGrow_"..i; mdl.Parent=blocksFolder
                    table.insert(allBlackBlockModels,mdl)
                    local p=mdl:FindFirstChildWhichIsA("BasePart")
                    if p then
                        p.Anchored,p.CanCollide=false,false
                        p.CustomPhysicalProperties=PhysicalProperties.new(0.01,0,0,0,0)
                        local bp=Instance.new("BodyPosition",p)
                        bp.MaxForce,bp.P,bp.D=Vector3.new(1e6,1e6,1e6),10000,300
                        local bg=Instance.new("BodyGyro",p)
                        bg.MaxTorque,bg.D=Vector3.new(1e5,1e5,1e5),300
                        RunService.Heartbeat:Connect(function()
                            if core.Parent and p.Parent then
                                bp.Position=core.Position+offset
                                bg.CFrame=CFrame.lookAt(p.Position,core.Position)
                            end
                        end)
                    end
                    break
                end
            end
        end
    end

    stampBlocks(50)
    core:SetAttribute("Loaded",true)

    local function growBy(amount)
        local cur=core:GetAttribute("BlockCount") or 50
        local nc=cur+amount
        core:SetAttribute("BlockCount",nc)
        local pr=core:GetAttribute("PullRadius") or 30
        core:SetAttribute("PullRadius",pr+amount*1.0)
        stampBlocks(nc)
    end

    growFunctions[bh]=growBy
    updateBlackholeList()
    return bh
end

-- 3) Whitehole
local WHITE_BLOCK_ID,WHITE_BLOCK_UUID=56452868,"{ffffff66-9119-4714-957b-74aa3d8232c1}"
function createWhiteholeModel()
    local idx=1
    while whiteholesFolder:FindFirstChild("Whitehole"..idx) do idx=idx+1 end
    local wh=Instance.new("Model",whiteholesFolder); wh.Name="Whitehole"..idx
    local core=Instance.new("Part",wh)
    core.Name,core.Size,core.Shape,core.Material,core.Color=
      "WhiteHoleCore",Vector3.new(6,6,6),Enum.PartType.Ball,Enum.Material.Neon,Color3.new(1,1,1)
    core.Anchored,core.CanCollide=true,false
    core:SetAttribute("Active",true)
    core:SetAttribute("PushRadius",30)
    core:SetAttribute("Loaded",false)
    local rp=Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso")
    core.CFrame=(rp and rp.CFrame) or PlayerPlate.CFrame

    local blocksFolder=Instance.new("Folder",wh); blocksFolder.Name="Blocks"
    local count,rad=50,8
    local golden=math.pi*(3-math.sqrt(5))
    for i=1,count do
        local t=(i-0.5)/count; local y=1-2*t; local r=math.sqrt(1-y*y)
        local phi=(i-1)*golden; local offset=Vector3.new(math.cos(phi)*r,y,math.sin(phi)*r)*rad
        local oldList=ActiveParts:GetChildren()
        StampAsset:InvokeServer(WHITE_BLOCK_ID,core.CFrame+Vector3.new(0,5,0),WHITE_BLOCK_UUID,{},0)
        task.wait(0.02)
        for _,mdl in ipairs(getNewChildren(oldList)) do
            if mdl.Name=="Block - White" then
                mdl.Name="WhiteBlock_"..i; mdl.Parent=blocksFolder
                table.insert(allWhiteBlockModels,mdl)
                local p=mdl:FindFirstChildWhichIsA("BasePart")
                if p then
                    p.Anchored,p.CanCollide=false,false
                    local bp=Instance.new("BodyPosition",p)
                    bp.MaxForce,bp.P,bp.D=Vector3.new(1e6,1e6,1e6),10000,300
                    local bg=Instance.new("BodyGyro",p)
                    bg.MaxTorque,bg.D=Vector3.new(1e5,1e5,1e5),300
                    RunService.Heartbeat:Connect(function()
                        if core.Parent and p.Parent then
                            bp.Position=core.Position+offset
                            bg.CFrame=CFrame.lookAt(p.Position,core.Position)
                        end
                    end)
                end
                break
            end
        end
    end

    core:SetAttribute("Loaded",true)
    updateWhiteholeList()
    return wh
end

--------------------------------------------------------------------------------
--// Glue & Attachment Helpers
--------------------------------------------------------------------------------

local GLUE_ID,GLUE_UID=56452868,"{b600792b-d22d-4f54-9642-45ac7aa3bfe9}"
local function WeldWithGlue(...)
    StampAsset:InvokeServer(GLUE_ID,PlayerPlate.CFrame+Vector3.new(0,200,0),GLUE_UID,{...},0)
end

local function pullWithBodyMovers(gp,core)
    gp.Anchored,gp.CanCollide=false,false
    local bp=Instance.new("BodyPosition",gp)
    bp.MaxForce,bp.P,bp.D=Vector3.new(1e7,1e7,1e7),4000,300
    local bg=Instance.new("BodyGyro",gp)
    bg.MaxTorque,bg.D=Vector3.new(1e7,1e7,1e7),300
    RunService.Heartbeat:Connect(function()
        if not (gp.Parent and core.Parent) then return end
        local d=(core.Position-gp.Position).Magnitude
        if d<=5 then gp.CFrame=CFrame.new(9e9,9e9,9e9); return end
        bp.Position=core.Position
        bg.CFrame=CFrame.lookAt(gp.Position,core.Position)
    end)
end

local function pushWithBodyMovers(gp,core)
    gp.Anchored,gp.CanCollide=false,false
    local bv=Instance.new("BodyVelocity",gp)
    bv.MaxForce=Vector3.new(1e7,1e7,1e7)
    RunService.Heartbeat:Connect(function()
        if not (gp.Parent and core.Parent) then return end
        bv.Velocity=(gp.Position-core.Position).Unit*300
    end)
end

function attachGlueToAssembly(parts,core,isWhite,bhModel)
    if #parts==0 then return end
    local oldList=ActiveParts:GetChildren()
    WeldWithGlue(table.unpack(parts))
    task.wait(0.2)
    for _,c in ipairs(ActiveParts:GetChildren()) do
        if c.Name=="Block - White" and not table.find(oldList,c) then
            local gp=c:FindFirstChildWhichIsA("BasePart")
            if gp then
                if isWhite then
                    pushWithBodyMovers(gp,core)
                else
                    pullWithBodyMovers(gp,core)
                    if bhModel and bhModel:GetAttribute("GrowEnabled") and bhModel:GetAttribute("Loaded") then
                        local fn=growFunctions[bhModel]
                        if fn then fn(1) end
                    end
                end
            end
            break
        end
    end
end

function attachGlueToPlayerChar(char,core,isWhite,bhModel)
    local hrp=char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local oldList=ActiveParts:GetChildren()
    WeldWithGlue(hrp)
    task.wait(0.2)
    for _,c in ipairs(ActiveParts:GetChildren()) do
        if c.Name=="Block - White" and not table.find(oldList,c) then
            local gp=c:FindFirstChildWhichIsA("BasePart")
            if gp then
                if isWhite then
                    pushWithBodyMovers(gp,core)
                else
                    pullWithBodyMovers(gp,core)
                    if bhModel and bhModel:GetAttribute("GrowEnabled") and bhModel:GetAttribute("Loaded") then
                        local fn=growFunctions[bhModel]
                        if fn then fn(1) end
                    end
                end
            end
            break
        end
    end
end

--------------------------------------------------------------------------------
--// Scan Loop
--------------------------------------------------------------------------------

local gluedAssemblies = {}
local lastScan        = 0
local SCAN_INTERVAL   = 0.5

RunService.Heartbeat:Connect(function()
    local now = os.clock()
    if now - lastScan < SCAN_INTERVAL then return end
    lastScan = now

    -- BLACKHOLES
    for _, bh in ipairs(blackholesFolder:GetChildren()) do
        local core = bh:FindFirstChild("BlackHoleCore")
        if core and core:GetAttribute("Active") ~= false and core:GetAttribute("Loaded") then
            local rad = core:GetAttribute("PullRadius") or 30

            -- Parts
            for _, part in ipairs(Workspace:GetDescendants()) do
                if part:IsA("BasePart")
                   and not part.Anchored
                   and part.Parent
                   and not isLocalPlayerPart(part)
                   and not isBlackHoleBlock(part)
                   and not isWhiteHoleBlock(part)
                   and (part.Position - core.Position).Magnitude <= rad then

                    local root = part.AssemblyRootPart
                    if root and not gluedAssemblies[root] then
                        gluedAssemblies[root] = true
                        attachGlueToAssembly(part:GetConnectedParts(true), core, false, bh)
                    end
                end
            end

            -- Players
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= LPlayer and not whitelist[pl.UserId] then
                    local char = pl.Character
                    local hrp  = char and char:FindFirstChild("HumanoidRootPart")
                    if hrp and (hrp.Position - core.Position).Magnitude <= rad and not gluedAssemblies[hrp] then
                        gluedAssemblies[hrp] = true
                        attachGlueToPlayerChar(char, core, false, bh)
                    end
                end
            end
        end
    end

    -- WHITEHOLES
    for _, wh in ipairs(whiteholesFolder:GetChildren()) do
        local core = wh:FindFirstChild("WhiteHoleCore")
        if core and core:GetAttribute("Active") ~= false and core:GetAttribute("Loaded") then
            local rad = core:GetAttribute("PushRadius") or 30

            -- Parts
            for _, part in ipairs(Workspace:GetDescendants()) do
                if part:IsA("BasePart")
                   and not part.Anchored
                   and part.Parent
                   and not isLocalPlayerPart(part)
                   and not isBlackHoleBlock(part)
                   and not isWhiteHoleBlock(part)
                   and (part.Position - core.Position).Magnitude <= rad then

                    local root = part.AssemblyRootPart
                    if root and not gluedAssemblies[root] then
                        gluedAssemblies[root] = true
                        attachGlueToAssembly(part:GetConnectedParts(true), core, true, nil)
                    end
                end
            end

            -- Players
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= LPlayer and not whitelist[pl.UserId] then
                    local char = pl.Character
                    local hrp  = char and char:FindFirstChild("HumanoidRootPart")
                    if hrp and (hrp.Position - core.Position).Magnitude <= rad and not gluedAssemblies[hrp] then
                        gluedAssemblies[hrp] = true
                        attachGlueToPlayerChar(char, core, true, nil)
                    end
                end
            end
        end
    end
end)

--------------------------------------------------------------------------------
--// UI Event Connections
--------------------------------------------------------------------------------

-- Open/Close UI
closeBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    openBtn.Visible   = true
end)
openBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    openBtn.Visible   = false
end)

-- Page switches
homeBtn.MouseButton1Click:Connect(function()
    homePage.Visible = true
    advPage.Visible  = false
end)
advancedBtn.MouseButton1Click:Connect(function()
    homePage.Visible = false
    advPage.Visible  = true
end)

-- Home‑page actions
createOldBtn.MouseButton1Click:Connect(createOldBlackholeModel)
removeOldBtn.MouseButton1Click:Connect(function()
    if selectedBlackhole then
        selectedBlackhole:Destroy()
        selectedBlackhole = nil
        updateBlackholeList()
    end
end)
toggleOldBtn.MouseButton1Click:Connect(function()
    if selectedBlackhole then
        local c = selectedBlackhole:FindFirstChild("BlackHoleCore")
        if c then
            local cur = c:GetAttribute("Active")
            if cur == nil then cur = true end
            c:SetAttribute("Active", not cur)
            c.Color = cur and Color3.fromRGB(128,128,128) or Color3.new(0,0,0)
        end
    end
end)
bringOldLocalBtn.MouseButton1Click:Connect(function()
    if selectedBlackhole then
        local c   = selectedBlackhole:FindFirstChild("BlackHoleCore")
        local hrp = Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso")
        if c and hrp then
            c.CFrame = hrp.CFrame * CFrame.new(0,5,0)
        end
    end
end)
bringOldTargetBtn.MouseButton1Click:Connect(function()
    if selectedBlackhole then
        local txt = targetBox.Text:lower()
        for _, pl in ipairs(Players:GetPlayers()) do
            if pl ~= LPlayer and (pl.Name:lower():find(txt) or pl.DisplayName:lower():find(txt)) then
                local hrp = pl.Character and pl.Character:FindFirstChild("HumanoidRootPart")
                local c   = selectedBlackhole and selectedBlackhole:FindFirstChild("BlackHoleCore")
                if hrp and c then
                    c.CFrame = hrp.CFrame * CFrame.new(0,5,0)
                end
                break
            end
        end
    end
end)

-- Whitelist actions
wlAddBtn.MouseButton1Click:Connect(function()
    local txt = wlBox.Text:lower()
    for _, pl in ipairs(Players:GetPlayers()) do
        if pl ~= LPlayer and (pl.Name:lower():find(txt) or pl.DisplayName:lower():find(txt)) then
            whitelist[pl.UserId] = { Name = pl.Name, DisplayName = pl.DisplayName }
            updateWhitelistDisplay()
            break
        end
    end
end)
wlRemBtn.MouseButton1Click:Connect(function()
    local txt = wlBox.Text:lower()
    for _, pl in ipairs(Players:GetPlayers()) do
        if pl ~= LPlayer and (pl.Name:lower():find(txt) or pl.DisplayName:lower():find(txt)) then
            whitelist[pl.UserId] = nil
            updateWhitelistDisplay()
            break
        end
    end
end)

-- Advanced‑page actions
createGrowBtn.MouseButton1Click:Connect(createGrowingBlackholeModel)
createWhiteholeBtn.MouseButton1Click:Connect(createWhiteholeModel)
removeWhiteholeBtn.MouseButton1Click:Connect(function()
    if selectedWhitehole then
        selectedWhitehole:Destroy()
        selectedWhitehole = nil
        updateWhiteholeList()
    end
end)
toggleWhiteholeBtn.MouseButton1Click:Connect(function()
    if selectedWhitehole then
        local c = selectedWhitehole:FindFirstChild("WhiteHoleCore")
        if c then
            local cur = c:GetAttribute("Active")
            if cur == nil then cur = true end
            c:SetAttribute("Active", not cur)
            c.Color = cur and Color3.fromRGB(150,150,150) or Color3.new(1,1,1)
        end
    end
end)
bringWhiteLocalBtn.MouseButton1Click:Connect(function()
    if selectedWhitehole then
        local c   = selectedWhitehole:FindFirstChild("WhiteHoleCore")
        local hrp = Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso")
        if c and hrp then
            c.CFrame = hrp.CFrame * CFrame.new(0,5,0)
        end
    end
end)
bringWhiteTargetBtn.MouseButton1Click:Connect(function()
    if selectedWhitehole then
        local txt = targetBox.Text:lower()
        for _, pl in ipairs(Players:GetPlayers()) do
            if pl ~= LPlayer and (pl.Name:lower():find(txt) or pl.DisplayName:lower():find(txt)) then
                local hrp = pl.Character and pl.Character:FindFirstChild("HumanoidRootPart")
                local c   = selectedWhitehole:FindFirstChild("WhiteHoleCore")
                if hrp and c then
                    c.CFrame = hrp.CFrame * CFrame.new(0,5,0)
                end
                break
            end
        end
    end
end)

--// Initialize
updateBlackholeList()
updateWhiteholeList()
updateWhitelistDisplay()
homePage.Visible = true
advPage.Visible  = false